name: Build and Push Docker Image  
on:  
  push:  
    branches: [ main, master ]  
    paths-ignore:  
      - '**/*.md'  
      - 'docs/**'  
  pull_request:  
    branches: [ main, master ]  
  # 也可以手动触发  
  workflow_dispatch:  
jobs:  
  build-and-push:  
    runs-on: ubuntu-latest  
    permissions:  
      contents: read  
      packages: write  
    steps:  
      - name: Checkout repository  
        uses: actions/checkout@v4  
      - name: Set up Docker Buildx  
        uses: docker/setup-buildx-action@v3  
      # 登录到 GitHub 容器仓库  
      - name: Login to GitHub Container Registry  
        uses: docker/login-action@v3  
        with:  
          registry: ghcr.io  
          username: ${{ github.repository_owner }}  
          password: ${{ secrets.GITHUB_TOKEN }}  
      # 提取仓库名称作为镜像名  
      - name: Extract repository name  
        id: repo-name  
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT  
      # 获取当前日期和短SHA作为版本号  
      - name: Get version tag  
        id: version  
        run: |  
          SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-7)  
          DATE=$(date +'%Y%m%d')  
          echo "TAG=${DATE}-${SHORT_SHA}" >> $GITHUB_OUTPUT  
      - name: Build and Push Multi-Arch Images  
        uses: docker/build-push-action@v5  
        with:  
          context: .  
          push: true  
          tags: |  
            ghcr.io/${{ steps.repo-name.outputs.REPO_NAME }}:latest  
            ghcr.io/${{ steps.repo-name.outputs.REPO_NAME }}:${{ steps.version.outputs.TAG }}  
      
      # 专门为 ARM64 架构构建并推送镜像
      - name: Build and Push ARM64 Image  
        uses: docker/build-push-action@v5  
        with:  
          context: .  
          push: true  
          platforms: linux/arm64  
          tags: |  
            ghcr.io/${{ steps.repo-name.outputs.REPO_NAME }}:arm-latest  

      
      # 输出镜像信息  
      - name: Image digest  
        run: |  
          echo "Multi-arch image has been pushed to ghcr.io/${{ steps.repo-name.outputs.REPO_NAME }}:latest"  
          echo "Multi-arch image has been pushed to ghcr.io/${{ steps.repo-name.outputs.REPO_NAME }}:${{ steps.version.outputs.TAG }}"  
          echo "ARM64-only image has been pushed to ghcr.io/${{ steps.repo-name.outputs.REPO_NAME }}:arm-latest"  
